# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-03-14 05:41
from __future__ import unicode_literals

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('registers', '0013_auto_20160303_1444'),
    ]

    operations = [
        migrations.CreateModel(
            name='ITSystemHardware',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.PositiveSmallIntegerField(choices=[(1, 'Application server'), (2, 'Database server'), (3, 'Network file storage'), (4, 'Reverse proxy')])),
            ],
        ),
        migrations.CreateModel(
            name='Software',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=2048, unique=True)),
                ('url', models.CharField(blank=True, max_length=2000, null=True)),
                ('os', models.BooleanField(default=False, help_text='Software is an operating system?', verbose_name='OS')),
            ],
            options={
                'verbose_name_plural': 'software',
            },
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=2048, unique=True)),
                ('user_count', models.PositiveIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='itsystem',
            name='availability',
            field=models.PositiveIntegerField(blank=True, choices=[(1, '24 hours a day, 7 days a week, 365 days a year'), (2, 'Department core business hours')], help_text='Expected availability for this IT System', null=True),
        ),
        migrations.AddField(
            model_name='itsystem',
            name='criticality',
            field=models.PositiveIntegerField(blank=True, choices=[(1, 'High'), (2, 'Medium'), (3, 'Low')], null=True),
        ),
        migrations.AddField(
            model_name='itsystem',
            name='itsystems',
            field=models.ManyToManyField(blank=True, help_text='Other IT Systems that help provide this IT System', related_name='_itsystem_itsystems_+', to='registers.ITSystem'),
        ),
        migrations.AddField(
            model_name='itsystem',
            name='schema_url',
            field=models.URLField(blank=True, max_length=2000, null=True),
        ),
        migrations.AddField(
            model_name='softwarelicense',
            name='oss',
            field=models.NullBooleanField(default=None, help_text='Open-source/free software license?'),
        ),
        migrations.AddField(
            model_name='softwarelicense',
            name='support',
            field=models.TextField(blank=True, help_text='Support timeframe or scope'),
        ),
        migrations.AddField(
            model_name='softwarelicense',
            name='support_url',
            field=models.URLField(blank=True, max_length=2000, null=True),
        ),
        migrations.AddField(
            model_name='softwarelicense',
            name='url',
            field=models.URLField(blank=True, max_length=2000, null=True),
        ),
        migrations.AlterField(
            model_name='backup',
            name='cost_centre',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='registers.CostCentre'),
        ),
        migrations.AlterField(
            model_name='device',
            name='cost_centre',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='registers.CostCentre'),
        ),
        migrations.AlterField(
            model_name='hardware',
            name='cost_centre',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='registers.CostCentre'),
        ),
        migrations.AlterField(
            model_name='itsystem',
            name='cost_centre',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='registers.CostCentre'),
        ),
        migrations.AlterField(
            model_name='softwarelicense',
            name='cost_centre',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='registers.CostCentre'),
        ),
        migrations.AlterField(
            model_name='vendor',
            name='extra_data',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True),
        ),
        migrations.AddField(
            model_name='software',
            name='license',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='registers.SoftwareLicense'),
        ),
        migrations.AddField(
            model_name='itsystemhardware',
            name='host',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='registers.Hardware'),
        ),
        migrations.AddField(
            model_name='hardware',
            name='os',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='registers.Software'),
        ),
        migrations.AddField(
            model_name='itsystem',
            name='hardwares',
            field=models.ManyToManyField(blank=True, help_text='Hardware that is used to provide this IT System', to='registers.ITSystemHardware'),
        ),
        migrations.AddField(
            model_name='itsystem',
            name='softwares',
            field=models.ManyToManyField(blank=True, help_text='Software that is used to provide this IT System', to='registers.Software'),
        ),
        migrations.AddField(
            model_name='itsystem',
            name='user_groups',
            field=models.ManyToManyField(blank=True, help_text='User group(s) that use this IT System', to='registers.UserGroup'),
        ),
        migrations.AlterUniqueTogether(
            name='itsystemhardware',
            unique_together=set([('host', 'role')]),
        ),
    ]
