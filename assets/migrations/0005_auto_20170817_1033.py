# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2017-08-17 02:33
from __future__ import unicode_literals

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('organisation', '0032_auto_20170717_1023'),
        ('tracking', '0003_computer_location'),
        ('assets', '0004_auto_20170804_0916'),
    ]

    operations = [
        migrations.CreateModel(
            name='SoftwareAsset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('extra_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('date_purchased', models.DateField(blank=True, null=True)),
                ('purchased_value', models.DecimalField(blank=True, decimal_places=2, help_text='The amount paid for this asset, inclusive of any upgrades (excluding GST).', max_digits=20, null=True)),
                ('notes', models.TextField(blank=True)),
                ('name', models.CharField(max_length=512, unique=True)),
                ('url', models.URLField(blank=True, max_length=2000, null=True, verbose_name='URL')),
                ('support', models.TextField(blank=True, help_text='Description of the scope of vendor support.')),
                ('support_expiry', models.DateField(blank=True, help_text='Expiry date of vendor support (if applicable).', null=True)),
                ('license', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'License/perpetual'), (1, 'Subscription/SaaS')], help_text='The license type/arrangement for this software asset', null=True)),
                ('license_details', models.TextField(blank=True, help_text='Description of license arrangement (custodian of license key/s, etc.)')),
                ('license_count', models.PositiveSmallIntegerField(blank=True, default=1, help_text='The number of licenses, seats or subscriptions provided with this software asset.', null=True)),
                ('cost_centre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='organisation.CostCentre')),
                ('installations', models.ManyToManyField(blank=True, help_text='Department computers on which this software is physically installed.', to='tracking.Computer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='softwarelicense',
            name='assigned_user',
        ),
        migrations.RemoveField(
            model_name='softwarelicense',
            name='cost_centre',
        ),
        migrations.RemoveField(
            model_name='softwarelicense',
            name='org_unit',
        ),
        migrations.RemoveField(
            model_name='softwarelicense',
            name='vendor',
        ),
        migrations.AlterField(
            model_name='hardwareasset',
            name='asset_tag',
            field=models.CharField(help_text='OIM asset tag number.', max_length=10, unique=True),
        ),
        migrations.AlterField(
            model_name='hardwareasset',
            name='finance_asset_tag',
            field=models.CharField(blank=True, help_text='The Finance Services Branch asset number for (leave blank if unknown).', max_length=10, null=True),
        ),
        migrations.AlterField(
            model_name='hardwareasset',
            name='hardware_model',
            field=models.ForeignKey(help_text="The manufacturer's hardware model.", on_delete=django.db.models.deletion.PROTECT, to='assets.HardwareModel'),
        ),
        migrations.AlterField(
            model_name='hardwareasset',
            name='vendor',
            field=models.ForeignKey(help_text='Vendor/reseller from whom this asset was purchased.', on_delete=django.db.models.deletion.PROTECT, to='assets.Vendor'),
        ),
        migrations.AlterField(
            model_name='invoice',
            name='job_number',
            field=models.CharField(blank=True, help_text="The department's job number relating to this order.", max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='invoice',
            name='vendor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='assets.Vendor'),
        ),
        migrations.DeleteModel(
            name='SoftwareLicense',
        ),
        migrations.AddField(
            model_name='softwareasset',
            name='invoice',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='assets.Invoice'),
        ),
        migrations.AddField(
            model_name='softwareasset',
            name='org_unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='organisation.OrgUnit'),
        ),
        migrations.AddField(
            model_name='softwareasset',
            name='publisher',
            field=models.ForeignKey(blank=True, help_text='The publisher of this software (may differ from the vendor/reseller).', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='publisher', to='assets.Vendor'),
        ),
        migrations.AddField(
            model_name='softwareasset',
            name='vendor',
            field=models.ForeignKey(help_text='Vendor/reseller from whom this asset was purchased.', on_delete=django.db.models.deletion.PROTECT, to='assets.Vendor'),
        ),
    ]
